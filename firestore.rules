rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isSignedIn() && getUserData(request.auth.uid).role == 'admin';
    }

    // Rules for users collection
    match /users/{userId} {
      // Admins can create users, or users can create their own profile
      allow create: if isAdmin() || isOwner(userId);
      // Admins can read any user, users can read their own profile
      allow read: if isAdmin() || isOwner(userId);
      // Admins can update any user, users can update their own profile
      allow update: if isAdmin() || isOwner(userId);
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Fallback rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
